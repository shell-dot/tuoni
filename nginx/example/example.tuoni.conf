server {
    listen 12702 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/certs/tuoni.crt;
    ssl_certificate_key /etc/nginx/certs/tuoni.key;

    resolver 127.0.0.11 valid=30s;  # Use Docker's internal DNS resolver
    resolver_timeout 5s;

    error_page 502 504 /502_504.html;
    location = /502_504.html {
        root /var/www/errors;
        internal;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    location / {
        proxy_pass http://tuoni-client:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        client_max_body_size 50M;
    }

    location /ws {
        proxy_pass http://tuoni-client:3001/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    location /tuoni-docs/ {
        set $docs_backend "http://tuoni-docs:8001";
        rewrite ^/tuoni-docs/(.*)$ /$1 break;
        proxy_pass $docs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Content-Type-Options nosniff;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
}
